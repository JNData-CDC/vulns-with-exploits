import requests
from github import Github

from sys import exc_info
from os import path

from config import EDB_DIR, GH_ORG, GH_REPO, EDB_MAPPING_FILE_NAME


class EDBMappingDownloader:
    def __init__(self):
        self.edb_dir = EDB_DIR
        self.gh_org = GH_ORG
        self.gh_repo = GH_REPO
        self.edb_mapping_file_name = EDB_MAPPING_FILE_NAME
    
    def run(self):
        g = Github()
        repo = g.get_repo(f"{self.gh_org}/{self.gh_repo}", lazy=False)
        latest_assets = repo.get_latest_release().get_assets()
        mapping_uri = next(
            (x.browser_download_url for x in latest_assets if x.name == self.edb_mapping_file_name)
            )
        try:
            mapping_file = requests.get(mapping_uri, allow_redirects=True)
        except requests.exceptions.RequestException:
            print("Error:", exc_info()[0])
            raise
        try:
            open(path.join(self.edb_dir, self.edb_mapping_file_name), 'wb').write(mapping_file.content)
        except:
            print("Error:", exc_info()[0])
            raise
